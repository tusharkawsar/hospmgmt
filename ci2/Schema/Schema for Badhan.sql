DROP TABLE DOCPRESCRIBES;
DROP TABLE PDHISTORY;
DROP TABLE PDAPPOINT;
DROP TABLE PATIENTBED;
DROP TABLE PATIENT;
DROP TABLE BED;
DROP TABLE DOCSCHEDULE;
DROP TABLE NURSESCHEDULE;
DROP TABLE WARD;
DROP TABLE DOCTOR;
DROP TABLE PRES;
DROP TABLE MEDICINE;
DROP TABLE NURSE;
DROP TABLE EMPSCHEDULE;
DROP TABLE EMP;
DROP TABLE WORKPLACE;
DROP TABLE BLOCK;
DROP TABLE LOGIN;


CREATE TABLE PATIENT
(
	PID CHAR(4) CONSTRAINT PK_PATIENT PRIMARY KEY,
	NAME VARCHAR2(20),
	ADDRESS VARCHAR2(50),
	AGE NUMBER(3),
	PHONE VARCHAR2(15),
	BLOOD_GROUP CHAR(5),
	STATUS CHAR(10),
	EMAIL VARCHAR2(30),
	PTYPE CHAR(10)
);

INSERT INTO PATIENT VALUES('P001', 'PATIENT 1', 'ELEPHANT ROAD', 31, '01682980422', 'A+VE', 'CURRENT', 'A@A.COM', 'INDOOR');
INSERT INTO PATIENT VALUES('P002', 'PATIENT 2', 'BANASREE', 25, '01923108331', 'B+VE', 'CURRENT', 'B@B.COM', 'INDOOR');
INSERT INTO PATIENT VALUES('P003', 'PATIENT 3', 'MOHAMMADPUR', 18, '01553467898', 'O+VE', 'FORMER', 'C@C.COM', 'OUTDOOR');
INSERT INTO PATIENT VALUES('P004', 'PATIENT 4', 'MIRPUR', 65, '01682980422', 'AB+VE', 'CURRENT', 'D@D.COM', 'INDOOR');
INSERT INTO PATIENT VALUES('P005', 'PATIENT 5', 'DHANMONDI', 2, '01682980422', 'O-VE', 'CURRENT', 'E@A.COM', 'INDOOR');
INSERT INTO PATIENT VALUES('P006', 'PATIENT 6', 'JIGATALA', 15, '01682980422', 'AB-VE', 'FORMER', 'F@A.COM', 'INDOOR');
INSERT INTO PATIENT VALUES('P007', 'PATIENT 7', 'DEMRA', 17, '01682980422', 'A+VE', 'FORMER', 'G@A.COM', 'OUTDOOR');


CREATE TABLE DOCTOR
(
	DID CHAR(4) CONSTRAINT PK_DOCTOR PRIMARY KEY,
	NAME VARCHAR2(20),
	ADDRESS VARCHAR2(50),
	PHONE VARCHAR2(15),
	AGE NUMBER(3),
	STATUS CHAR(10),
	EMAIL VARCHAR2(30),
	QUALIFICATION VARCHAR2(50),
	SPECIALIZATION VARCHAR2(50),
	SALARY NUMBER(8, 2)
);


INSERT INTO DOCTOR VALUES('D002', 'DOCTOR 2', 'ELEPHANT ROAD', '01682980424', 35, 'CURRENT', 'Z@YAHOO.COM', 'MBBS', 'KIDNEY', 20000);
INSERT INTO DOCTOR VALUES('D001', 'DOCTOR 1', 'MUGDA', '01682980423', 31, 'CURRENT', 'A@GMAIL.COM', 'FCPS', 'HEART', 20000);
INSERT INTO DOCTOR VALUES('D003', 'DOCTOR 3', 'BASABO', '01682980425', 60, 'CURRENT', 'V@GMAIL.COM', 'MRCP', 'LUNGS', 20000);
INSERT INTO DOCTOR VALUES('D004', 'DOCTOR 4', 'SHAMOLI', '01682980426', 75, 'CURRENT', 'X@HOTMAIL.COM', 'FCPS', 'CHILD', 20000);
INSERT INTO DOCTOR VALUES('D005', 'DOCTOR 5', 'PANTHAPATH', '01682980427', 50, 'FORMER', 'Y@LIVE.COM', 'MBBS', 'SKIN', NULL);


CREATE TABLE PDHISTORY
(
	PID CHAR(4),
	DID CHAR(4),
	STARTDATE DATE,
	ENDDATE DATE,
	SUMMARY VARCHAR2(200)
);
ALTER TABLE PDHISTORY ADD CONSTRAINT FK1_PDHISTORY FOREIGN KEY(PID) REFERENCES PATIENT(PID) ON DELETE SET NULL;
ALTER TABLE PDHISTORY ADD CONSTRAINT FK2_PDHISTORY FOREIGN KEY(DID) REFERENCES DOCTOR(DID) ON DELETE SET NULL;
ALTER TABLE PDHISTORY ADD CONSTRAINT PK_PDHISTORY PRIMARY KEY(PID, DID, STARTDATE);


INSERT INTO PDHISTORY VALUES('P001', 'D001', '16-MAR-2014', NULL, 'SERIOUS CONDITION');
INSERT INTO PDHISTORY VALUES('P001', 'D001', '06-MAR-2013', '26-MAR-2013', 'SERIOUS CONDITION');
INSERT INTO PDHISTORY VALUES('P001', 'D002', '16-MAR-2004', NULL, 'MINOR CONDITION');
INSERT INTO PDHISTORY VALUES('P002', 'D002', '16-MAR-1994', NULL, 'MINOR CONDITION');
INSERT INTO PDHISTORY VALUES('P003', 'D003', '16-JAN-2014', '16-JAN-2014', 'MINOR BRUISE');
INSERT INTO PDHISTORY VALUES('P004', 'D003', '16-JAN-2014', NULL, 'PROLONGED TREATMENT NEEDED');
INSERT INTO PDHISTORY VALUES('P005', 'D004', '16-JAN-2014', '16-JAN-2014', 'SERIOUS CONDITION');
INSERT INTO PDHISTORY VALUES('P005', 'D005', '01-JAN-2014', '21-JAN-2014', 'SURGERY REQUIRED');
INSERT INTO PDHISTORY VALUES('P006', 'D004', '16-JAN-2014', '17-JAN-2014', NULL);
INSERT INTO PDHISTORY VALUES('P007', 'D002', '30-MAR-2014', '30-MAR-2014', 'MINOR CUT');




CREATE OR REPLACE TRIGGER FK1_PDHISTORY_UPDATE
	AFTER UPDATE OF PID ON PATIENT
	FOR EACH ROW
	BEGIN
		UPDATE PDHISTORY SET PDHISTORY.PID=:NEW.PID WHERE :OLD.PID=PDHISTORY.PID;
	END;
/

CREATE OR REPLACE TRIGGER FK2_PDHISTORY_UPDATE
	AFTER UPDATE OF DID ON DOCTOR
	FOR EACH ROW
	BEGIN
		UPDATE PDHISTORY SET PDHISTORY.DID=:NEW.DID WHERE :OLD.DID=PDHISTORY.DID;
	END;
/


CREATE TABLE PDAPPOINT
(
	PID CHAR(4),
	DID CHAR(4),
	APPOINTDATE DATE
);
ALTER TABLE PDAPPOINT ADD CONSTRAINT FK1_PDAPPOINT FOREIGN KEY(PID) REFERENCES PATIENT(PID) ON DELETE SET NULL;
ALTER TABLE PDAPPOINT ADD CONSTRAINT FK2_PDAPPOINT FOREIGN KEY(DID) REFERENCES DOCTOR(DID) ON DELETE SET NULL;
ALTER TABLE PDAPPOINT ADD CONSTRAINT PK_PDAPPOINT PRIMARY KEY(PID, DID, APPOINTDATE);

INSERT INTO PDAPPOINT VALUES('P001', 'D001', '01-APR-2014');
INSERT INTO PDAPPOINT VALUES('P001', 'D002', '01-APR-2014');
INSERT INTO PDAPPOINT VALUES('P002', 'D002', '01-APR-2014');
INSERT INTO PDAPPOINT VALUES('P003', 'D003', '01-APR-2014');
INSERT INTO PDAPPOINT VALUES('P004', 'D004', '16-JAN-2015');
INSERT INTO PDAPPOINT VALUES('P006', 'D003', '01-APR-2014');
INSERT INTO PDAPPOINT VALUES('P007', 'D001', '01-APR-2014');


CREATE OR REPLACE TRIGGER FK1_PDAPPOINT_UPDATE
	AFTER UPDATE OF PID ON PATIENT
	FOR EACH ROW
	BEGIN
		UPDATE PDAPPOINT SET PDAPPOINT.PID=:NEW.PID WHERE :OLD.PID=PDAPPOINT.PID;
	END;
/

CREATE OR REPLACE TRIGGER FK2_PDAPPOINT_UPDATE
	AFTER UPDATE OF DID ON DOCTOR
	FOR EACH ROW
	BEGIN
		UPDATE PDAPPOINT SET PDAPPOINT.DID=:NEW.DID WHERE :OLD.DID=PDAPPOINT.DID;
	END;
/


CREATE TABLE MEDICINE
(
	MEDID CHAR(6) CONSTRAINT PK_MEDICINE PRIMARY KEY,
	NAME VARCHAR2(20),
	PHARMACEUTICALNAME VARCHAR2(20),
	AMOUNT CHAR(10),
	MANUFACTURER CHAR(20),
	SUMMARY VARCHAR2(200)
);

INSERT INTO MEDICINE VALUES('MED001', 'NAPA', 'PARACETAMOL', '5 MG', 'BEXIMCO', 'REMOVES MINOR DISCOMFORT');
INSERT INTO MEDICINE VALUES('MED002', 'TUFNIL', 'PAINKILLER', '5 MG', 'BEXIMCO', 'REMOVES HEADACHE');
INSERT INTO MEDICINE VALUES('MED003', 'TUSHKA', 'FEVER-REPELLENT', '10 MG', 'GLAXO-SMITH-KLINE', 'CURES FEVER');
INSERT INTO MEDICINE VALUES('MED004', 'ACE', 'PARACETAMOL', '0.1 MG', 'ACME', 'TAKE AFTER REMOVES MINOR DISCOMFORT');	
INSERT INTO MEDICINE VALUES('MED005', 'ANTACID', 'ANTI-GASTRONE', '2 MG', 'SQUARE', 'FIGHTS ACIDITY');

CREATE TABLE PRES
(
	PRESID CHAR(7) CONSTRAINT PK_PRES PRIMARY KEY,
	MEDID CHAR(6),
	BEGINDATE DATE,
	NUMBERTAKEN CHAR(10),
	CMNT VARCHAR2(100),
	DURATION CHAR(10)
);
ALTER TABLE PRES ADD CONSTRAINT FK_PRES FOREIGN KEY(MEDID) REFERENCES MEDICINE(MEDID);


CREATE OR REPLACE TRIGGER FK_PRES_UPDATE
	AFTER UPDATE OF MEDID ON MEDICINE
	FOR EACH ROW
	BEGIN
		UPDATE PRES SET PRES.MEDID=:NEW.MEDID WHERE :OLD.MEDID=PRES.MEDID;
	END;
/


INSERT INTO PRES VALUES('PRES001', 'MED001', '16-MAR-2014', '1+1+1', 'TAKE AFTER MEAL', '1 MONTH');
INSERT INTO PRES VALUES('PRES002', 'MED002', '17-MAR-2014', '0+1+1', 'TAKE BEFORE MEAL', '2 MONTH');
INSERT INTO PRES VALUES('PRES003', 'MED003', '06-MAR-2013', '1+0+1', 'TAKE BEFORE MEAL', '3 MONTH');
INSERT INTO PRES VALUES('PRES004', 'MED003', '16-MAR-2014', '1+0+2', 'TAKE AFTER MEAL', '4 MONTH');
INSERT INTO PRES VALUES('PRES005', 'MED003', '16-MAR-1994', '0+0+2', 'TAKE AFTER MEAL', '5 MONTH');
INSERT INTO PRES VALUES('PRES006', 'MED003', '16-JAN-2014', '1+1+1', 'TAKE 2 HOURS AFTER MEAL', '1 MONTH');
INSERT INTO PRES VALUES('PRES007', 'MED002', '16-JAN-2014', '1+1+1', 'TAKE BEFORE MEAL', '1 WEEK');
INSERT INTO PRES VALUES('PRES008', 'MED003', '17-JAN-2014', '1+2+1', 'TAKE AFTER MEAL', '1 WEEK');
INSERT INTO PRES VALUES('PRES009', 'MED005', '16-JAN-2014', '0+1+1', 'TAKE 1 HOUR BEFORE MEAL', '2 WEEK');
INSERT INTO PRES VALUES('PRES010', 'MED002', '01-JAN-2014', '0+1+1', 'TAKE AFTER MEAL', '3 WEEK');


CREATE TABLE DOCPRESCRIBES 
(
	PID CHAR(4),
	DID CHAR(4),
	PRESID CHAR(7)		
);
ALTER TABLE DOCPRESCRIBES ADD CONSTRAINT FK1_DOCPRESCRIBES FOREIGN KEY(PID) REFERENCES PATIENT(PID) ON DELETE SET NULL;
ALTER TABLE DOCPRESCRIBES ADD CONSTRAINT FK2_DOCPRESCRIBES FOREIGN KEY(DID) REFERENCES DOCTOR(DID) ON DELETE SET NULL;
ALTER TABLE DOCPRESCRIBES ADD CONSTRAINT FK3_DOCPRESCRIBES FOREIGN KEY(PRESID) REFERENCES PRES(PRESID) ON DELETE SET NULL;
ALTER TABLE DOCPRESCRIBES ADD CONSTRAINT PK_DOCPRESCRIBES PRIMARY KEY (PID,DID,PRESID);



INSERT INTO DOCPRESCRIBES VALUES('P001', 'D001', 'PRES001');
INSERT INTO DOCPRESCRIBES VALUES('P001', 'D001', 'PRES002');
INSERT INTO DOCPRESCRIBES VALUES('P001', 'D001', 'PRES003');
INSERT INTO DOCPRESCRIBES VALUES('P001', 'D002', 'PRES004');
INSERT INTO DOCPRESCRIBES VALUES('P002', 'D002', 'PRES005');
INSERT INTO DOCPRESCRIBES VALUES('P003', 'D003', 'PRES006');
INSERT INTO DOCPRESCRIBES VALUES('P004', 'D003', 'PRES007');
INSERT INTO DOCPRESCRIBES VALUES('P004', 'D003', 'PRES008');
INSERT INTO DOCPRESCRIBES VALUES('P005', 'D004', 'PRES009');
INSERT INTO DOCPRESCRIBES VALUES('P005', 'D005', 'PRES010');



CREATE OR REPLACE TRIGGER FK1_DOCPRESCRIBES_UPDATE
	AFTER UPDATE OF PID ON PATIENT
	FOR EACH ROW
	BEGIN
		UPDATE DOCPRESCRIBES SET DOCPRESCRIBES.PID=:NEW.PID WHERE :OLD.PID=DOCPRESCRIBES.PID;
	END;
/

CREATE OR REPLACE TRIGGER FK2_DOCPRESCRIBES_UPDATE
	AFTER UPDATE OF DID ON DOCTOR
	FOR EACH ROW
	BEGIN
		UPDATE DOCPRESCRIBES SET DOCPRESCRIBES.DID=:NEW.DID WHERE :OLD.DID=DOCPRESCRIBES.DID;
	END;
/



CREATE TABLE NURSE
(
	NID CHAR(4) CONSTRAINT PK_NURSE PRIMARY KEY,
	NAME VARCHAR2(20),
	ADDRESS VARCHAR2(50),
	AGE NUMBER(3),
	PHONE VARCHAR2(15),
	STATUS CHAR(10),
	EMAIL VARCHAR2(30),
	QUALIFICATION VARCHAR2(50),
	SALARY NUMBER(8, 2)
);

INSERT INTO NURSE VALUES('N001', 'NURSE 1', 'DHANMONDI', 20, '01924567890', 'CURRENT', 'N@NURSE.COM', 'HSC', 8000);
INSERT INTO NURSE VALUES('N002', 'NURSE 2', 'JIGATALA', 30, '01924566690', 'CURRENT', 'M@NURSE.COM', 'BACHELOR', 10000);
INSERT INTO NURSE VALUES('N003', 'NURSE 3', 'ELEPHANT ROAD', 50, '01924557890', 'CURRENT', 'O@NURSE.COM', 'HSC', 15000);
INSERT INTO NURSE VALUES('N004', 'NURSE 4', 'KAKRAIL', 18, '01924367790', 'CURRENT', 'P@NURSE.COM', 'SSC', 5000);
INSERT INTO NURSE VALUES('N005', 'NURSE 5', 'MALIBAG', 18, '01924589890', 'FORMER', 'Q@NURSE.COM', 'SSC', NULL);

CREATE TABLE BLOCK
(
	BLOCKID CHAR(8) CONSTRAINT PK_BLOCK PRIMARY KEY,
	BLOCKTYPE VARCHAR2(10),
	NAME VARCHAR2(20),
	NUMBEROFWARDS NUMBER(2)
);

INSERT INTO BLOCK VALUES('BLOCK001', 'TYPE1', 'BLOCK 1', 2);
INSERT INTO BLOCK VALUES('BLOCK002', 'TYPE2', 'BLOCK 2', 2);
INSERT INTO BLOCK VALUES('BLOCK003', 'TYPE3', 'BLOCK 3', 1);
INSERT INTO BLOCK VALUES('BLOCK004', 'TYPE4', 'BLOCK 4', 2);
INSERT INTO BLOCK VALUES('BLOCK005', 'TYPE5', 'BLOCK 5', 1);


CREATE TABLE WARD
(
	WARDID CHAR(4) CONSTRAINT PK_WARD PRIMARY KEY,
	BLOCKID CHAR(8),
	WARDTYPE VARCHAR2(10),
	NAME VARCHAR2(20),
	NUMBEROFBEDS NUMBER(2)
);
ALTER TABLE WARD ADD CONSTRAINT FK_WARD FOREIGN KEY(BLOCKID) REFERENCES BLOCK(BLOCKID) ON DELETE SET NULL;


INSERT INTO WARD VALUES('W001', 'BLOCK001', 'CCU', 'WARD 1', 5);
INSERT INTO WARD VALUES('W002', 'BLOCK001', 'CCU', 'WARD 2', 10);
INSERT INTO WARD VALUES('W003', 'BLOCK002', 'MATENITY', 'WARD 3', 20);
INSERT INTO WARD VALUES('W004', 'BLOCK002', 'GAINE', 'WARD 4', 20);
INSERT INTO WARD VALUES('W005', 'BLOCK003', 'HEART', 'WARD 5', 10);
INSERT INTO WARD VALUES('W006', 'BLOCK004', 'BRAIN', 'WARD 6', 10);
INSERT INTO WARD VALUES('W007', 'BLOCK004', 'PATHOLOGY', 'WARD 7', 20);
INSERT INTO WARD VALUES('W008', 'BLOCK005', 'CHILD', 'WARD 8', 30);


CREATE OR REPLACE TRIGGER FK_WARD_UPDATE
	AFTER UPDATE OF BLOCKID ON BLOCK
	FOR EACH ROW
	BEGIN
		UPDATE WARD SET WARD.BLOCKID=:NEW.BLOCKID WHERE :OLD.BLOCKID=WARD.BLOCKID;
	END;
/


CREATE TABLE BED
(
	BEDID CHAR(6) CONSTRAINT PK_BEDID PRIMARY KEY,
	WARDID CHAR(4),
	RENT NUMBER(6, 2),
	BEDTYPE VARCHAR2(15)
);
ALTER TABLE BED ADD CONSTRAINT FK_BED FOREIGN KEY(WARDID) REFERENCES WARD(WARDID);



INSERT INTO BED VALUES('BED001', 'W001', 100, 'NOT AVAILABLE');
INSERT INTO BED VALUES('BED002', 'W001', 100, 'NOT AVAILABLE');
INSERT INTO BED VALUES('BED003', 'W002', 500, 'AVAILABLE');
INSERT INTO BED VALUES('BED004', 'W002', 500, 'AVAILABLE');
INSERT INTO BED VALUES('BED005', 'W002', 500, 'AVAILABLE');

CREATE OR REPLACE TRIGGER FK_BED_UPDATE
	AFTER UPDATE OF WARDID ON WARD
	FOR EACH ROW
	BEGIN
		UPDATE BED SET BED.WARDID=:NEW.WARDID WHERE :OLD.WARDID=BED.WARDID;
	END;
/

CREATE TABLE PATIENTBED
(
	PID CHAR(4),
	BEDID CHAR(6),
	STARTDATE DATE,
	ENDDATE DATE
);
ALTER TABLE PATIENTBED ADD CONSTRAINT PK_PATIENTBED PRIMARY KEY(PID, BEDID, STARTDATE);
ALTER TABLE PATIENTBED ADD CONSTRAINT FK1_PATIENTBED FOREIGN KEY(PID) REFERENCES PATIENT(PID) ON DELETE SET NULL;
ALTER TABLE PATIENTBED ADD CONSTRAINT FK2_PATIENTBED FOREIGN KEY(BEDID) REFERENCES BED(BEDID) ON DELETE SET NULL;

INSERT INTO PATIENTBED(PID, BEDID, STARTDATE, ENDDATE) VALUES('P001', 'BED001', '16-MAR-2014', NULL);
INSERT INTO PATIENTBED(PID, BEDID, STARTDATE, ENDDATE) VALUES('P001', 'BED002', '14-MAR-2014', '16-MAR-2014');
INSERT INTO PATIENTBED(PID, BEDID, STARTDATE, ENDDATE) VALUES('P002', 'BED002', '16-MAR-2014', '20-MAR-2014');
INSERT INTO PATIENTBED(PID, BEDID, STARTDATE) VALUES('P002', 'BED002', '20-MAR-2014');

CREATE OR REPLACE TRIGGER FK1_PATIENTBED_UPDATE
	AFTER UPDATE OF PID ON PATIENT
	FOR EACH ROW
	BEGIN
		UPDATE PATIENTBED SET PATIENTBED.PID=:NEW.PID WHERE :OLD.PID=PATIENTBED.PID;
	END;
/

CREATE OR REPLACE TRIGGER FK2_PATIENTBED_UPDATE
	AFTER UPDATE OF BEDID ON BED
	FOR EACH ROW
	BEGIN
		UPDATE PATIENTBED SET PATIENTBED.BEDID=:NEW.BEDID WHERE :OLD.BEDID=PATIENTBED.BEDID;
	END;
/

CREATE OR REPLACE TRIGGER MAKE_BED_AVAILABLE
	AFTER UPDATE OF STATUS ON PATIENT
	FOR EACH ROW
	DECLARE
		BEDID1 CHAR(6);
	BEGIN
		SELECT BEDID INTO BEDID1 FROM PATIENTBED WHERE PID=:NEW.PID AND ENDDATE IS NULL;
		IF :NEW.STATUS='FORMER' AND :OLD.STATUS='CURRENT' THEN
			UPDATE BED SET BEDTYPE='AVAILABLE' WHERE BEDID=BEDID1;
			UPDATE PATIENTBED SET ENDDATE=SYSDATE WHERE PID=:NEW.PID AND ENDDATE IS NULL;
			UPDATE PDHISTORY SET ENDDATE=SYSDATE WHERE PID=:NEW.PID AND ENDDATE IS NULL;
		END IF;
	END;
/


CREATE TABLE NURSESCHEDULE
(
	WARDID CHAR(4),
	NID CHAR(4),
	STARTDATE DATE,
	ENDDATE DATE
);
ALTER TABLE NURSESCHEDULE ADD CONSTRAINT FK1_NURSESCHEDULE FOREIGN KEY(WARDID) REFERENCES WARD(WARDID) ON DELETE SET NULL;
ALTER TABLE NURSESCHEDULE ADD CONSTRAINT FK2_NURSESCHEDULE FOREIGN KEY(NID) REFERENCES NURSE(NID) ON DELETE SET NULL;
ALTER TABLE NURSESCHEDULE ADD CONSTRAINT PK_NURSESCHEDULE PRIMARY KEY(WARDID, NID, STARTDATE);

INSERT INTO NURSESCHEDULE VALUES('W001', 'N001', '16-APR-2014', '22-APR-2014');
INSERT INTO NURSESCHEDULE VALUES('W001', 'N002', '16-APR-2014', '22-APR-2014');
INSERT INTO NURSESCHEDULE VALUES('W002', 'N002', '23-APR-2014', '29-APR-2014');
INSERT INTO NURSESCHEDULE VALUES('W002', 'N002', '01-APR-2014', '07-APR-2014');
INSERT INTO NURSESCHEDULE VALUES('W002', 'N002', '10-APR-2014', '16-APR-2014');
INSERT INTO NURSESCHEDULE VALUES('W003', 'N003', '15-APR-2014', '21-APR-2014');
INSERT INTO NURSESCHEDULE VALUES('W005', 'N005', '15-APR-2014', '21-APR-2014');

CREATE OR REPLACE TRIGGER FK1_NURSESCHEDULE_UPDATE
	AFTER UPDATE OF WARDID ON WARD
	FOR EACH ROW
	BEGIN
		UPDATE NURSESCHEDULE SET NURSESCHEDULE.WARDID=:NEW.WARDID WHERE :OLD.WARDID=NURSESCHEDULE.WARDID;
	END;
/

CREATE OR REPLACE TRIGGER FK2_NURSESCHEDULE_UPDATE
	AFTER UPDATE OF NID ON NURSE
	FOR EACH ROW
	BEGIN
		UPDATE NURSESCHEDULE SET NURSESCHEDULE.NID=:NEW.NID WHERE :OLD.NID=NURSESCHEDULE.NID;
	END;
/

CREATE TABLE DOCSCHEDULE
(
	WARDID CHAR(4),
	DID CHAR(4),
	STARTDATE DATE,
	ENDDATE DATE
);
ALTER TABLE DOCSCHEDULE ADD CONSTRAINT FK1_DOCSCHEDULE FOREIGN KEY(WARDID) REFERENCES WARD(WARDID) ON DELETE SET NULL;
ALTER TABLE DOCSCHEDULE ADD CONSTRAINT FK2_DOCSCHEDULE FOREIGN KEY(DID) REFERENCES DOCTOR(DID) ON DELETE SET NULL;
ALTER TABLE DOCSCHEDULE ADD CONSTRAINT PK_DOCSCHEDULE PRIMARY KEY(WARDID, DID, STARTDATE);


INSERT INTO DOCSCHEDULE VALUES('W001', 'D001', '16-APR-2014', '18-APR-2014');
INSERT INTO DOCSCHEDULE VALUES('W001', 'D002', '16-APR-2014', '18-APR-2014');
INSERT INTO DOCSCHEDULE VALUES('W002', 'D002', '20-APR-2014', '22-APR-2014');
INSERT INTO DOCSCHEDULE VALUES('W002', 'D003', '20-APR-2014', '22-APR-2014');
INSERT INTO DOCSCHEDULE VALUES('W004', 'D004', '20-APR-2014', '22-APR-2014');
INSERT INTO DOCSCHEDULE VALUES('W005', 'D004', '23-APR-2014', '25-APR-2014');
INSERT INTO DOCSCHEDULE VALUES('W006', 'D004', '26-APR-2014', '28-APR-2014');
INSERT INTO DOCSCHEDULE VALUES('W007', 'D004', '29-APR-2014', '30-APR-2014');
INSERT INTO DOCSCHEDULE VALUES('W008', 'D004', '01-APR-2014', '07-APR-2014');


CREATE OR REPLACE TRIGGER FK1_DOCSCHEDULE_UPDATE
	AFTER UPDATE OF WARDID ON WARD
	FOR EACH ROW
	BEGIN
		UPDATE DOCSCHEDULE SET DOCSCHEDULE.WARDID=:NEW.WARDID WHERE :OLD.WARDID=DOCSCHEDULE.WARDID;
	END;
/

CREATE OR REPLACE TRIGGER FK2_DOCSCHEDULE_UPDATE
	AFTER UPDATE OF DID ON DOCTOR
	FOR EACH ROW
	BEGIN
		UPDATE DOCSCHEDULE SET DOCSCHEDULE.DID=:NEW.DID WHERE :OLD.DID=DOCSCHEDULE.DID;
	END;
/


CREATE TABLE EMP
(
	EID CHAR(4) CONSTRAINT PK_EMP PRIMARY KEY,
	NAME VARCHAR2(20),
	ADDRESS VARCHAR2(50),
	PHONE VARCHAR2(20),
	AGE NUMBER(3),
	STATUS CHAR(10),
	EMAIL VARCHAR2(30),
	QUALIFICATION VARCHAR2(50),
	TYPE VARCHAR2(15),
	SALARY NUMBER(8, 2)
);


INSERT INTO EMP VALUES('E001', 'EMP 1', 'ELEPHANT ROAD', '01689988776', 22, 'CURRENT', 'E@EMP.COM', 'BACHELORS', 'ADMIN', 15000);
INSERT INTO EMP VALUES('E002', 'EMP 2', 'JIGATALA', '01989988776', 32, 'CURRENT', 'F@EMP.COM', 'MASTERS', 'ADMIN', 15000);
INSERT INTO EMP VALUES('E003', 'EMP 3', 'JIGATALA', '01789988776', 42, 'CURRENT', 'G@EMP.COM', 'HSC', 'RECEIPTONIST', 12000);
INSERT INTO EMP VALUES('E004', 'EMP 4', 'ELEPHANT ROAD', '01889988776', 19, 'CURRENT', 'H@EMP.COM', 'HSC', 'RECEIPTONIST', 12000);
INSERT INTO EMP VALUES('E005', 'EMP 5', 'MIRPUR', '01589988776', 25, 'FORMER', 'I@EMP.COM', 'SSC', 'RECEIPTONIST', NULL);


CREATE TABLE WORKPLACE
(
	PLACEID CHAR(8) CONSTRAINT PK_WORKPLACE PRIMARY KEY,
	PFLOOR NUMBER(2),
	NAME VARCHAR2(20),
	BLOCKID CHAR(10),			
	ROOMNUMBER NUMBER(3) 
);

INSERT INTO WORKPLACE VALUES('PLACE001', 2, 'ADMINS PLACE', 'BLOCK001', 232);
INSERT INTO WORKPLACE VALUES('PLACE002', 1, 'RECEIPTION DESK 1', 'BLOCK002', 111);
INSERT INTO WORKPLACE VALUES('PLACE003', 1, 'RECEIPTION DESK 2', 'BLOCK005', 101);


CREATE TABLE EMPSCHEDULE
(
	PLACEID CHAR(8),
	EID CHAR(4),
	STARTDATE DATE,
	ENDDATE DATE
);
ALTER TABLE EMPSCHEDULE ADD CONSTRAINT FK1_EMPSCHEDULE FOREIGN KEY(PLACEID) REFERENCES WORKPLACE(PLACEID) ON DELETE SET NULL;
ALTER TABLE EMPSCHEDULE ADD CONSTRAINT FK2_EMPSCHEDULE FOREIGN KEY(EID) REFERENCES EMP(EID) ON DELETE SET NULL;
ALTER TABLE EMPSCHEDULE ADD CONSTRAINT PK_EMPSCHEDULE PRIMARY KEY(PLACEID, EID, STARTDATE);


INSERT INTO EMPSCHEDULE VALUES('PLACE001', 'E001', '01-APR-2014', '07-APR-2014');
INSERT INTO EMPSCHEDULE VALUES('PLACE001', 'E002', '08-APR-2014', '15-APR-2014');
INSERT INTO EMPSCHEDULE VALUES('PLACE001', 'E001', '16-APR-2014', '22-APR-2014');
INSERT INTO EMPSCHEDULE VALUES('PLACE001', 'E002', '23-APR-2014', '29-APR-2014');
INSERT INTO EMPSCHEDULE VALUES('PLACE002', 'E002', '01-APR-2014', '05-APR-2014');
INSERT INTO EMPSCHEDULE VALUES('PLACE002', 'E003', '06-APR-2014', '10-APR-2014');
INSERT INTO EMPSCHEDULE VALUES('PLACE003', 'E004', '01-APR-2014', '05-APR-2014');
INSERT INTO EMPSCHEDULE VALUES('PLACE003', 'E005', '06-APR-2014', '10-APR-2014');


CREATE OR REPLACE TRIGGER FK1_EMPSCHEDULE_UPDATE
	AFTER UPDATE OF PLACEID ON WORKPLACE
	FOR EACH ROW
	BEGIN
		UPDATE EMPSCHEDULE SET EMPSCHEDULE.PLACEID=:NEW.PLACEID WHERE :OLD.PLACEID=EMPSCHEDULE.PLACEID;
	END;
/

CREATE OR REPLACE TRIGGER FK2_EMPSCHEDULE_UPDATE
	AFTER UPDATE OF EID ON EMP
	FOR EACH ROW
	BEGIN
		UPDATE EMPSCHEDULE SET EMPSCHEDULE.EID=:NEW.EID WHERE :OLD.EID=EMPSCHEDULE.EID;
	END;
/


CREATE TABLE LOGIN(
	USERNAME VARCHAR2(10) CONSTRAINT PK_PERSON PRIMARY KEY,
	PASSWORD VARCHAR2(12),
	TYPE VARCHAR2(10)
);

INSERT INTO LOGIN VALUES ('P001','P001','PATIENT');
INSERT INTO LOGIN VALUES ('P002','P002','PATIENT');
INSERT INTO LOGIN VALUES ('P003','P003','PATIENT');
INSERT INTO LOGIN VALUES ('P004','P004','PATIENT');
INSERT INTO LOGIN VALUES ('P005','P005','PATIENT');
INSERT INTO LOGIN VALUES ('D001','D001','DOCTOR');
INSERT INTO LOGIN VALUES ('D002','D002','DOCTOR');
INSERT INTO LOGIN VALUES ('D003','D003','DOCTOR');
INSERT INTO LOGIN VALUES ('D004','D004','DOCTOR');
INSERT INTO LOGIN VALUES ('D005','D005','DOCTOR');
INSERT INTO LOGIN VALUES ('N001','N001','NURSE');
INSERT INTO LOGIN VALUES ('N002','N002','NURSE');
INSERT INTO LOGIN VALUES ('E001','E001','ADMIN');
INSERT INTO LOGIN VALUES ('E002','E002','RCP');
INSERT INTO LOGIN VALUES ('E003','E003','RCP');
